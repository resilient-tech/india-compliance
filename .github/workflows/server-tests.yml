name: Server Tests

on:
    pull_request:
        paths-ignore:
            - "**.css"
            - "**.js"
            - "**.md"
            - "**.html"
            - "**.csv"

    push:
        branches: [next, version-14-hotfix, version-14]
        paths-ignore:
            - "**.css"
            - "**.js"
            - "**.md"
            - "**.html"
            - "**.csv"
env:
    IC_BRANCH: ${{ github.base_ref || github.ref_name }}

jobs:
    tests:
        runs-on: ubuntu-20.04
        timeout-minutes: 20

        strategy:
            fail-fast: false

        name: Python Unit Tests

        services:
            mysql:
                image: mariadb:10.3
                env:
                    MYSQL_ALLOW_EMPTY_PASSWORD: YES
                ports:
                    - 3306:3306
                options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

        steps:
            - name: Clone
              uses: actions/checkout@v3

            - name: Setup Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.10"

            - name: Setup Node
              uses: actions/setup-node@v3
              with:
                  node-version: 16
                  check-latest: true

            - name: Add to Hosts
              run: echo "127.0.0.1 test_site" | sudo tee -a /etc/hosts

            - name: Cache pip
              uses: actions/cache@v3
              with:
                  path: ~/.cache/pip
                  key: ${{ runner.os }}-pip-${{ hashFiles('**/*requirements.txt') }}
                  restore-keys: |
                      ${{ runner.os }}-pip-
                      ${{ runner.os }}-

            - name: Cache node modules
              uses: actions/cache@v3
              env:
                  cache-name: cache-node-modules
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-

            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn cache dir)"

            - uses: actions/cache@v3
              id: yarn-cache
              with:
                  path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - name: Install
              run: |
                  bash ${GITHUB_WORKSPACE}/.github/helper/install.sh
              env:
                  BRANCH_TO_CLONE: ${{ env.IC_BRANCH == 'next' && 'develop' || env.IC_BRANCH }}

            - name: Run Tests
              run: cd ~/frappe-bench/ && bench --site test_site run-tests --app india_compliance
              env:
                  TYPE: server
