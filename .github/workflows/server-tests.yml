name: Server Tests

on:
    workflow_call:
      inputs:
        base_ref:
          type : string

        app_name:
          type : string
      
      secrets:
        codecov_token:
    
    pull_request:
        paths-ignore:
            - "**.css"
            - "**.js"
            - "**.md"
            - "**.html"
            - "**.csv"

    push:
        branches: [develop, version-14-hotfix, version-14, version-15-hotfix, version-15]
        paths-ignore:
            - "**.css"
            - "**.js"
            - "**.md"
            - "**.html"
            - "**.csv"
env:
    BRANCH: ${{ inputs.base_ref || github.base_ref || github.ref_name }}
    APP_NAME: ${{ inputs.app_name || 'india_compliance' }}

jobs:
    tests:
        runs-on: ubuntu-latest
        timeout-minutes: 20

        strategy:
            fail-fast: false

        name: Python Unit Tests

        services:
            mariadb:
                image: mariadb:10.6
                env:
                    MARIADB_ROOT_PASSWORD: 'travis'
                ports:
                    - 3306:3306
                options: --health-cmd="mariadb-admin ping" --health-interval=5s --health-timeout=2s --health-retries=3

        steps:
            - name: Clone
              uses: actions/checkout@v4

            - name: Setup Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.11"

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  check-latest: true

            - name: Add to Hosts
              run: echo "127.0.0.1 test_site" | sudo tee -a /etc/hosts

            - name: Cache pip
              uses: actions/cache@v4
              with:
                  path: ~/.cache/pip
                  key: ${{ runner.os }}-pip-${{ hashFiles('**/*requirements.txt') }}
                  restore-keys: |
                      ${{ runner.os }}-pip-
                      ${{ runner.os }}-

            - name: Cache node modules
              uses: actions/cache@v4
              env:
                  cache-name: cache-node-modules
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-

            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

            - uses: actions/cache@v4
              id: yarn-cache
              with:
                  path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - name: Install
              run: |
                  bash ${GITHUB_WORKSPACE}/.github/helper/install.sh
              env:
                  BRANCH_TO_CLONE: ${{ env.BRANCH }}

            - name: Run Tests
              run: cd ~/frappe-bench/ && bench --site test_site run-tests --app ${{ env.APP_NAME }} --coverage
              env:
                  TYPE: server

            - name: Show bench output
              if: ${{ always() }}
              run: cat ~/frappe-bench/bench_start.log || true

            - name: Upload coverage data
              uses: actions/upload-artifact@v4
              with:
                name: coverage
                path: /home/runner/frappe-bench/sites/coverage.xml

    coverage:
        name: Coverage Wrap Up
        env:
            CODECOV_TOKEN: ${{ secrets.codecov_token || secrets.CODECOV_TOKEN }}
        needs: tests
        runs-on: ubuntu-latest
        steps:
        - name: Clone
          uses: actions/checkout@v4

        - name: Download artifacts
          uses: actions/download-artifact@v4

        - name: Upload coverage data
          if: github.event.repository.name == 'india-compliance' || env.CODECOV_TOKEN != ''
          uses: codecov/codecov-action@v4
          env:
            CODECOV_TOKEN: ${{ env.CODECOV_TOKEN }}
          with:
            name: MariaDB
            fail_ci_if_error: true
            verbose: true